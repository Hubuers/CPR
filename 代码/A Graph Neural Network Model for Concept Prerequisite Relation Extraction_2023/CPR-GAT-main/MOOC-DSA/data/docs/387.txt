Hello everybody. Welcome back to our unit on flows and networks. Today we're going to be talking a little bit about sort of how to bound the size of our flows. And in particular, I mean, we've got this problem. In order to find maxflows, we're going to need a way to verify the flows that we have are actually optimal. So, in ,particular what we're going to do is we're going to need techniques for bounding the size of a maximum flow. And it turns out we actually had a way to do this. So, in our original example, we said we have the city we're trying to evacuate. And if we have a river at a particular location, if you just look at the total amount of capacity of all the roads that cross the river, this gave us an upper bound on the rate at which we could evacuate the city. Because everyone evacuating the city needs to cross the river at some point. And this is going to be our basic idea for bounding maxflows. The idea is, we want to find a bottleneck in the flow. We want to sort of find some region where in order to cross from one side of this bottleneck to the other, there's not a lot of capacity. And the total capacity across this bottleneck will give us a bound on the flow. So to make this a little bit more rigorous, we're going to define a cut. So given the network G, a cut, this is going to be a set of vertices of G. And you should think of these as sort of the set of vertices sort of on the source side of river, on the same side of the river as the C. So this is a set of vertices such that C contains all the sources of our graph and none of the sinks. Now the size of the cut is given by the total capacity of all edges that leave the cut, that go from inside the cut to outside the cut, which is the sum of all that capacity. And so, for example, in this network that we had corresponding to our city evacuation problem, we can define a cut that contains these four vertices. And size of the cut, well, is the sum of the capacities of these four roads, which ends up being 8000. Okay, so to make sure we're all on the same page, here is a pretty simple network. There is a cut, which is this blue square that contains four vertices on the inside. What's the size of this cut? Well, you just have to look at which edges cross from inside the cut to outside the cut. These have capacities one and two and three. And so you add those up, and you get six as the answer. Okay, so the important thing though is that your cuts provide upper bounds on the size of the flow in and out. In particular, for any flow f and any cut C, the size of f is at most the size of C. And this was sort of exactly the argument that we had, any piece of flow needs to cross the cut. There's only so much capacity that lets you cross the cut, and so that's an upper bound on the flow. Now, to make this rigorous, let's give a proof, the flow is the sum of our sources of the total flow out of that vertex minus the total flow into that vertex. Now for vertices that aren't a source or sink, this term is zero. So we can extend this to a sum over vertices inside our cut of the flow out of that vertex minus the flow into that vertex. On the other hand, you'll note that, I mean, if you have an edge that stays within the cut, it comes out of one vertex and into another and cancels out of the sum. So this is the same as the sum over edges that leave the cut of the flow through that edge, minus the sum over edges that go into the cut of the flow through that edge. Now of course, the flow of edges leaving the cut, that's at most the capacity of the edge, the flow of edges into the cut is at least zero. And so this things is at most the sum of the edges that leave the cut of the capacity of that edge, which is exactly the size of the cut. So this proves the theorem. And what this says is that if you have any cut C, that gives you an upper bound on the maximum flow. The size of the maximum flow is at most the size of the cut. Now it's good we've got some upper bounds, but the question is, is this good enough? I mean, there are lots of ways to prove upper bounds. But what we really want is a sharp upper bound, one that good enough that once we found a maximum flow, we'll have a matching upper bound that will tell us you actually can't do any better than this. And, somewhat surprisingly, bounds of this form are actually good enough. So the big theorem here is known as the maxflow-mincut theorem. For any network G, the maximum over flows of the size of the flow is equal to the minimum over cuts of the size of the cut. In other words, there's always going to be a cut that's small enough to give the correct upper bound on maximum flows. So to prove this theorem, let's start with a very special case. What happens when the maximum flow is equal to zero? If this is the case, it has to be the case that there's no path from source to sink. If there is any path from a source to a sink, then you could ride a little bit of flow along that path, and your maxflow would be positive. So what we're going to do is we're going to let C be the set of vertices that are reachable from sources. And it turns out there can't be any edges out of C at all because if there were, if there was an edge that left C, then wherever you ended up, that would also be reachable from the source. And it should be in C as well. Now, since there are no edges leaving C, the size of the cut has to be 0. Now, in the general case, we can do something similar. We're going to let f now be a maximum flow for G. And then, we're going to look at the residual graph. Now, if the residual graph, which is a way to talk about ways of adding flow to f, if that had any flow that you could put in it, f couldn't be a maxflow. So the residual graph has maxflow zero. And what that means is there's a cut C with size zero in this residual graph. And I claim this cut C has size exactly equal to the size of our flow f. And the proof isn't hard. The size of f for any cut is actually the total flow out of that cut minus the total flow into that cut. But if C has size 0 in the residual graph, that means that all the edges leaving the cut need to have been completely saturated, they need to have used the full capacity. And the edges coming in to C had to have no flow, because otherwise the residual graph would have an edge pointing on the opposite direction. And so the size is just total sum over edges leaving C of their capacity minus the sum over edges in the C of zero, which is just the size of the cut. And so we what found is we found a flow f and a cut c where the size of the flow is equal to the size of the cut. Now, by the previous limit, you can't have any flows bigger than that cut, or any cuts smaller than that flow. And so this is the maximum flow, and it's equal to the minimum cut size. So in summary, you can always check whether or not a flow is maximal by seeing if there's a matching cut. In particular, f is going to be a maxflow if and only if there's no source to sink path in the residual graph, and this is a key criteria that we'll be using in our algorithm that we'll be discussing next time. So, I hope to see you for the next lecture. 