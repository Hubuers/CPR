We will now discuss a problem of assembling a genome from its k-mer composition. This is a puzzle with just 16 pieces, however it is very complex, harder than you think. It may set you back for many hours because it is a highly repetitive puzzle. Every frog in this puzzle is repeated multiplied times. When you try to assemble the phi genome from its k-mers, there is a sino publication because if k is small, some k-mers will be repeated, as in example we saw before. As a result, there may be multiple solution of the problems that complicate our task. And the exercise break that I recommend you to think about is to answer the following question. What is the minimum value of k for which the phi genome can be uniquely reconstructed from it k-mer composition? This is another example of a rather complex puzzle reveals repeated thesis. In fact there was two million dollar prize announced for this puzzle, for solution of this puzzle. But the puzzle remains unsolved til this day. Please note that what you see at this slide Is actually not the solution because there are seven empty pieces that nobody was able to place yet, and it is called Eternity II puzzle. We do not ask you to solve the Eternity II puzzle, it's extremely complex, but we ask you to solve a simpler puzzle assembly problem when you have to assemble a smaller version of this puzzle that requires placing 25 square pieces into a five by five grid. As opposed to the eternity puzzle where you have to face 256 pieces into 16 by 16 grid. 70 years ago, a Dutch mathematician Nicolaas de Bruijn thought about solving a different puzzle, finding the string containing each binary k-mer exactly once. He called the strings universal strings. For example, these are all eight binary c-mers. And we can construct the graph, overlap graph, for these eight c-mers and find a Hamiltonian path in this graph. In this case, it will be 0001110100. But de Bruijn wanted to solve this problem for any k, and you can imagine that for k equal, let's say to 20, the overlap graph will contain million of vertices, and it will be very difficult to figure out whether there is a Hamiltonian path in this graph. And that's why de Bruijn wanted to implement a different idea based on construction of a different graph. He wanted to construct a graph in which every k-mer correspond to an edge rather than a vertex. And where each k-universal string corresponds to an Eulerian path, or a path that visit every edge exactly once, rather than Hamiltonian paths that visits every vertex exactly once. And we will now face the Eulerian path problem, construct an Eulerian path in a directed graph. Where input is a directed graph and output is a path visiting every edge exactly once. And now you may be puzzled or even confused. Why in the world we would want to change one problem, Hamiltonian path problem, into another problem, Eurlerian path problem, that looks almost identical to the Hamiltonian path problem. You will learn why in the next section. [MUSIC] 