Hi. In this video, you will see that the method I suggested in the last video for shifting the pattern on the text is safe, in the sense that we won't miss any of the occurrences of the pattern in the text by shifting it that way. But first we need suffix notation. We denote by S with index k, suffix of string S which starts in the position k. For example, for s = abcd, the suffix starting at position 2 is S2, and it is cd. And for string T, which is = abc, the suffix starting in position 0 is T0, and it is abc. Note that, again, we use indexes starting from 0 for all the strings. Suppose the pattern is aligned with position k in the text. Let's denote by u, the longest common prefix of the pattern, and the suffix Tk. Then, select the longest border w of the string u. In the last video, I suggested to move the pattern to the right in such a way that the left w in the pattern coincides with the right w in the text. And now, we'll prove that there cannot be any occurrences of pattern in the text in the red area between the current position k and the start of the right w in the text. This will prove that the shift suggested in the last video is safe, we won't miss any occurrences by shifting the pattern this way. Suppose the pattern occurs in the text in some position i between k and the start of the line w. Let's move the pattern to align with that position i. Then we can notice that there is a prefix, v, of the pattern that is also a suffix of u in the text. And so this string v, which is both a prefix of P and a suffix of u, is actually both a prefix and a suffix of u. And also this v is longer than w, because it started before w in the text and ended in the same position as the right w in the text. And so v is a border of u, because it's both a prefix and a suffix. And it is also a border which is longer than w, but w was the longest border of u. So we got the contradiction with the assumption that our pattern P occurs somewhere between the current position k and the start of the right win the text. Now you know that it is actually possible to avoid many of the comparison that the Brute Force algorithm does by shifting the pattern along the test and skipping some of the positions in which the Brute Force algorithm tries to align the pattern with the text. But how to actually determine the best shifts of the pattern, how to compute those longest borders and the common prefixes, that you will learn in the next videos. 