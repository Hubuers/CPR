Hello everybody, welcome back to our network flows unit. Today we're going to be talking about sort of an example of an algorithm. Network on which the Ford-Fulkerson algorithm might not be very efficient. So last time we had this great algorithm for Maxflow called the Ford-Fulkerson Algorithm. The runtime was all of the number of edges of the graph times the size of the maximum flow. Now, this is potentially very bad if the size of the flow is large. On the other hand, this is sort of a theoretical problem at this point. We don't know for sure whether or not this is ever actually a problem. So today we're going to consider the following example. Here is a graph, some of the capacities are pretty large a bunch of them have a million capacity and then there's one edge with only capacity one. So the max flow here is big, we can route a million units of flow over the top and another million over the bottom, so the max flow for this graph is two million, fine. Let's look at possible executions of the forward focus and algorithm on this graph. In particular, one in particular. So we start with no flow, we have a residual graph, let's look for a source to sync path. Here's one. What's the minimum capacity on this path? Well it's one coming from that middle edge. So we're going to route one unit of flow along that path. Update the residual, find the source to seek a path. Here's one. One unit of capacity along the middle edge. So we route one more unit of flow along this path. Update the residual, find the path, one more unit of flow, residual, one more unit of flow, and we can keep going like this for a while. So the question here is, if we keep iterating the Ford-Fulkerson algorithm like this. How many iterations will actually take to compute the maximum flow?. If assuming that it keeps augmenting paths is according to this pattern. Well quite a lot actually. Each step here adds only one unit of flow because we're keeping limited by this middle edge. In order to find a max flow, we need a total of two million total units. So that Ford-Fulkerson algorithm requires something like two million iterations before it converges on this graph. And that's a really big number for a graph with only four vertices. On the other hand, if you think about it, it doesn't need to be this bad. I mean here's another perfectly valid execution of the Ford-Fulkerson algorithm on this graph. We've got no flow. Let's find a path in the residual. There's this one. We can write a million units of flow along that path, update the residual. Here's another path. Put a million units of flow along that path and suddenly we've got a cut. We're done. And so there's a big difference between these two different executions of more or less the same algorithm. And what would be really nice is if we had a way to ensure that we always had something that looked more like the ladder execution than like the former execution. And next time we're going to be talking about sort of a way to go about this. A sort of principled way of choosing our paths to guarantee that we don't have the type of problem presented by the first of these examples. So that's what we will be discussing next time. I hope to see you then. 