We'll now discuss some challenges that you will face while working with real sequencing data. In the past, we made some unrealistic assumptions about our sequencing data. We assume the perfect coverage of genome by reads, which means every k-mer from the genome is represented by read. For most of the problems that we looked at. We assumes that reads are error-free. We also assumes that multiplicities of k-mers in the genome are known. And we assumes that distances between reads within read-pairs are exact. In reality, we have imperfect coverage of genome by reads. Reads do not start at each position of a genome. In reality, reads are error prone. Multiplicities of k-mers are unknown and distances between reads within read-pairs are inexact. And this makes the problem of genome assembly more difficult than the problem being considered before. Let's consider the first unrealistic assumption that reads have perfect coverage, or in other words they start, at every position of a genome. In reality they start at some position in the genome. For example 250 nucleotide reads generated by Illumina, the leading sequencing company today, capture only a small fraction of 250-mers from the genome. Thus, while making the key assumption of the de Bruijn graphs. What should we do to generate a perfect coverage from existing coverage limited coverage barriers? There is a simple solution, lets break reads into shorter k-mers. And when you've done it for 40 on the left, the result is perfect coverage by shorter fibers on the right. And thus we can apply the de Brujin graph idea to this set of reads broken into k-mers. Second unrealistic assumption, with most problems in this [INAUDIBLE] so far, we consider error free reads. Imagine what happens if the ad for error free reads that we considered before the fifth read, that has one substitution error. And it will result after breaking these reads into fk-mers, into many erroneous k-mers generated from these reads. How will it affect our De Brujin graph? If we would construct de Brujin graph of this segment from error free reads, we would see a perfect pass. But when we add erroneous k-mers, there is additional alternative pass added to this structure. And this pass forms erroneous paths forms a so-called bubble with this correct path. And Bubble Detection Problem is design an algorithm for finding bubbles in a directed graph. Outputs the number of bubbles in the de Bruijn graph constructed from the k-mers occurring in 1000 error-prone reads from a mutated phi genome. We define a bubble in this case as two short alternative passes between the same vertices in the de Bruijn graph, and it will be up to you to define parameters for selecting bubbles, and looking at data that we will provide to solve these bubble detection problem. And when you move to larger Brujin graph for example the Brujin graph for bacterial green genome, you will see an explosion of bubbles. There will be a huge number of bubbles of de Brujin graph of real data sets and your goal will be to find out nevertheless, in this ocean of bubble, correct edges inside de Bruijn graph. And this will result in the problem of reconstructing the phi genome from error-prone reads using de Bruijn graph. The third unrealistic assumption they assumes that multiplicity of k-mers in the de Brujin graph are known. For example here you have three mers ATG connecting the same vertices in the de Brujin graph. In reality, we often don't know multiplicities, so in de Bruijn Graph, instead of three address, you may only see one. And, I want you to think about the problem of inferring multiplicity of k-mers in de Bruijn Graph. And, in fact, this problem can be formulated as one of the problem you have already studied in this specialization before. Which one? After you consider all this complications, you will be ready for solving the last challenging problem in this capstone assembling E. coli X genome from real reads. And after you solve this problem, we have the most challenging problem in this course for you. Assembling E. coli X genome from real read-pairs. Good luck. It was a real pleasure working with you in this specialization. [MUSIC] 